name: Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

permissions:
  actions: write
  contents: read



jobs:
  lint:
    name: üß™ ESLint
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install eslint
        
      - name: Lint
        run: npm run lint

  build:
    name: üê≥ Build
    needs: [lint]
    uses: ./.github/workflows/build.yml
    secrets: inherit

  deploy:
    name: üöÄ Deploy
    runs-on: [self-hosted]
    needs: [build]
    # only build/deploy main branch on pushes
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' && github.event_name == 'push' }}

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4.1.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üöÄ Run Docker Compose on Production
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          APP_ENV: ${{ secrets.APP_ENV }}
          DB_HOST: database
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          TOKEN: ${{ secrets.TOKEN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
        run: |
          docker pull thibaultyvd/meteion:production
          docker compose -f docker-compose.yml up -d
          docker system prune --all --volumes --force

      - name: üöÄ Run Docker Compose on Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        env:
          APP_ENV: ${{ secrets.APP_ENV_STAGING }}
          DB_HOST: database
          DB_USER: ${{ secrets.STAGING_DB_USER }}
          DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
          DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          TOKEN: ${{ secrets.STAGING_TOKEN }}
          CLIENT_ID: ${{ secrets.STAGING_CLIENT_ID }}
        run: |
          docker pull thibaultyvd/meteion:staging
          docker compose -f docker-compose.staging.yml up -d
          docker system prune --all --volumes --force