name: üê≥ Build And Push Docker Image

on:
  workflow_call:
    inputs:
      tag:
        type: string
        description: The tag to push to the Docker registry.
        required: true

jobs:
  build:
    name: üê≥ Docker Image (${{ inputs.tag }})
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: üßë‚Äçüíª Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üê≥ Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: thibaultyvd/meteion:${{ inputs.tag }}
          build-args: |
            TZ=Europe/Paris \
            COMMIT_SHA=${{ github.sha }} \
            APP_ENV=${{ inputs.tag == 'production' && secrets.APP_ENV || secrets.APP_ENV_STAGING }} \
            DB_HOST=database \
            DB_USER=${{ inputs.tag == 'production' && secrets.DB_USER || secrets.STAGING_DB_USER }} \
            DB_PASSWORD=${{ inputs.tag == 'production' && secrets.DB_PASSWORD || secrets.STAGING_DB_PASSWORD }} \
            MYSQL_ROOT_PASSWORD=${{ inputs.tag == 'production' && secrets.DB_PASSWORD || secrets.STAGING_DB_PASSWORD }} \
            DB_NAME=${{ inputs.tag == 'production' && secrets.DB_NAME || secrets.STAGING_DB_NAME }} \
            TOKEN=${{ inputs.tag == 'production' && secrets.TOKEN || secrets.STAGING_TOKEN }} \
            CLIENT_ID=${{ inputs.tag == 'production' && secrets.CLIENT_ID || secrets.STAGING_CLIENT_ID }}

          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: üöö Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache